@import "../../../susy/sass/susy";
@import "mixins/utils";
@import "variables";

$susy: (
  columns: 12,
  global-box-sizing: border-box,
  gutters: $gutter-width / $grid-column-width,
  gutter-position: split,
  container: $grid-max-width,
  debug: (
    image: $susy-grid-background,
  )
);

.content-container {
  @include container;
  position: relative;

  // 1270px
  @include mqmin($grid-max-width + $gap-between-ad-and-grid + $side-ad-width) {
    float: left;
    width: 100%;


  }

  // 1440px
  @include mqmin($grid-max-width + 2 * $side-ad-width + 2 * $gap-between-ad-and-grid) {
    float: none;
    width: auto;
  }
}

.ad-container {
  display: none;

  // 1270px
  @include mqmin($grid-max-width + $gap-between-ad-and-grid + $side-ad-width) {
    display: block;
    width: 160px;
    position: absolute;
    top: 0;
    right: -$side-ad-width - $gap-between-ad-and-grid;
  }
}

.grid-row {
  @include clearfix;

  @for $i from 1 through 12 {
    .grid-col-#{$i} {
      @include span($i);
      //think about stacking the columns < 1024

      @include mqmax($viewportM - 1) {
        float: none;
        width: 100%;
      }
    }

    @include mqmax($viewportM - 1) {
      .grid-col-s-#{$i} {
        @include span($i);
      }
    }
    @include mqminmax($viewportM, $viewportL - 1) {
      .grid-col-m-#{$i} {
        @include span($i);
      }
    }
    @include mqminmax($viewportL, $viewportXL - 1) {
      .grid-col-l-#{$i} {
        @include span($i);
      }
    }
    @include mqmin($viewportXL) {
      .grid-col-xl-#{$i} {
        @include span($i);
      }
    }
  }
}
