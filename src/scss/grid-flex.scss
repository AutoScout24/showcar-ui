
@mixin flexColumn($i) {
  flex-basis: (100% / (12 / $i));
  max-width: (100% / (12 / $i));

  //margin & float reset only used to override current susy grid
  float: none;
  margin-left: 0;
  margin-right: 0;
}

.sc-use-flex-grid .sc-grid-row {
  box-sizing: border-box;
  display: flex;
  flex: 0 1 auto;
  flex-direction: row;
  flex-wrap: wrap;

  @for $i from 1 through 12 {
    .sc-grid-col-#{$i} {
      @include flexColumn($i);
    }
  }

  //xl viewport
  @include mqmin($viewportXL) {
    @for $i from 1 through 12 {
      .sc-grid-col-xl-#{$i} {
        @include flexColumn($i);
      }
    }
  }

  //l viewport
  @include mqmax($viewportXL - 1) {
    @for $i from 1 through 12 {
      .sc-grid-col-l-#{$i} {
        @include flexColumn($i);
      }
    }
  }

  //m viewport
  @include mqmax($viewportL - 1) {
    @for $i from 1 through 12 {
      .sc-grid-col-m-#{$i} {
        @include flexColumn($i);
      }
    }
  }

  //s viewport
  @include mqmax($viewportM - 1) {
    @for $i from 1 through 12 {
      .sc-grid-col-s-#{$i} {
        @include flexColumn($i);
      }
    }
  }

  //xs viewport
  @include mqmax($viewportS - 1) {
    @for $i from 1 through 12 {
      .sc-grid-col-xs-#{$i} {
        @include flexColumn($i);
      }
    }
  }
}
