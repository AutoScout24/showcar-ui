@import '../01-settings/variables';
@import '../02-sass-tools/sass-mq';

@mixin font($size: null, $bold: false, $silent: false, $line-height: null) {
  $font-sizes: (S: 0.8125rem, M: 1rem, L: 1.25rem, XL: 1.5rem, XXL: 2rem, hero: 1.5rem);

  @if $size {
    font-size: map-get($font-sizes, to-upper_case($size));
  }

  @if $bold {
    font-weight: 600;
  }

  @if $silent {
    color: $black-60;
  }

  @if $line-height {
    line-height: $line-height;
  }
}

.sc-font-s {
  @include font(S, $line-height: 1.5);
}

.sc-font-m {
  @include font(M, $line-height: 1.5);
}

.sc-font-l {
  @include font(L, $line-height: 1.4);
}

.sc-font-xl {
  @include font(XL, $line-height: 1.3);

  @include mqmin($viewportM) {
    font-size: $XXL;
  }
}

.sc-font-xxl {
  @include font(XXL, $line-height: 1.25);

  @include mqmin($viewportM) {
    font-size: 32px;
  }
}

.sc-font-hero {
  @include font(hero, $line-height: 1.3);

  @include mqmin($viewportM) {
    font-size: $XXXL;
    line-height: 1.2;
  }
}

.sc-font-silent {
  color: $black-60;
}

.sc-font-bold {
  font-weight: 600;
}


/// @param string $size - default size that is used, use the same variables as font mixin
/// @param string $sizeM - font size that is used starting at viewportM, use the same variables as font mixin
/// @param bool $bold - default font weight (true = bold)
/// @param bool $boldM - font weight that is used starting at viewportM
@mixin headline($size, $sizeM, $bold: false, $boldM: false) {
  @include font($size, $bold);
  @if not $bold {
    font-weight: normal;
  }

  @include mqmin($viewportM) {
    @include font($sizeM, $boldM);
    @if not $boldM {
      font-weight: normal;
    }
  }
}

// DEPRECATED. Use sc-font-* classes instead. Don't remove yet due to compatibility.
h1.sc-font {
  padding: 0 $L; //TODO rewrite padding

  @include headline(XL, XXL);
}

h2.sc-font {
  @include headline(L, XL, true, true);
}

h3.sc-font {
  @include headline(M, XL, true, false);
}

h4.sc-font {
  @include headline(M, L, false, true);
}

h5.sc-font {
  @include headline(M, M, false, true);
}
